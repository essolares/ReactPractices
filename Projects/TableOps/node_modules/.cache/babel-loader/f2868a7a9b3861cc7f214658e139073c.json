{"ast":null,"code":"var _jsxFileName = \"/Users/edgar/Desktop/ReactPractices/Projects/TableOps/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from './List';\nimport Alert from './Alert';\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem('list');\n};\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [list, setList] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editID, setEditID] = useState(null);\n  const [alert, setAlert] = useState({\n    show: false,\n    msg: '',\n    type: ''\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!name) {\n      //alert\n      showAlert(true, 'danger', 'please enter value');\n    } else if (name && isEditing) {\n      //deal with edit\n      setList(list.map(item => {\n        if (item.id === editID) {\n          return { ...item,\n            title: name\n          };\n        }\n\n        return item;\n      }));\n      setName('');\n      setEditID(null);\n      setIsEditing(false);\n      showAlert(true, 'success', 'value changed');\n    } else {\n      showAlert(true, 'success', 'item added to list');\n      const newItem = {\n        id: new Date().getTime().toString(),\n        title: name\n      };\n      setList([...list, newItem]);\n      setName('');\n    }\n  };\n\n  const showAlert = (show = false, type = \"\", msg = \"\") => {\n    setAlert({\n      show,\n      type,\n      msg\n    });\n  };\n\n  const clearList = () => {\n    showAlert(true, 'danger', 'empty list');\n    setList([]);\n  };\n\n  const removeItem = id => {\n    showAlert(true, 'danger', 'item removed');\n    setList(list.filter(item => item.id != id));\n  };\n\n  const editItem = id => {\n    const specificItem = list.find(item => item.id === id);\n    setIsEditing(true);\n    setEditID(id);\n    setName(specificItem.title);\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    className: \"grocery-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, alert.show && /*#__PURE__*/React.createElement(Alert, Object.assign({}, alert, {\n    removeAlert: showAlert,\n    list: list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 22\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Grocery bud\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"grocery\",\n    placeholder: \"e.g. Milk\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"submit-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, isEditing ? 'edit' : 'submit'))), list.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grocery-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    list: list,\n    removeItem: removeItem,\n    editItem: editItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"clear-btn\",\n    onClick: clearList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Clear Items\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/edgar/Desktop/ReactPractices/Projects/TableOps/src/App.js"],"names":["React","useState","useEffect","List","Alert","getLocalStorage","list","localStorage","getItem","App","name","setName","setList","isEditing","setIsEditing","editID","setEditID","alert","setAlert","show","msg","type","handleSubmit","e","preventDefault","showAlert","map","item","id","title","newItem","Date","getTime","toString","clearList","removeItem","filter","editItem","specificItem","find","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport List from './List'\nimport Alert from './Alert'\n\nconst getLocalStorage = ()=>{\n  let list = localStorage.getItem('list');\n}\n\nfunction App() {\n  const [name,setName]=useState('');\n  const [list,setList]=useState([]);\n  const [isEditing,setIsEditing]= useState(false);\n  const [editID,setEditID]= useState(null);\n  const [alert,setAlert]= useState({\n    show:false,\n    msg:'',\n    type:''});\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!name){\n      //alert\n      showAlert(true,'danger','please enter value')\n    }else if (name && isEditing){\n      //deal with edit\n      setList(list.map((item)=>{\n        if(item.id === editID){\n          return {...item, title:name}\n        }\n        return item\n      }))\n      setName('')\n      setEditID(null)\n      setIsEditing(false)\n      showAlert(true,'success','value changed')\n    }else {\n      showAlert(true,'success','item added to list');\n      const newItem = {id: new Date().getTime().toString(),title:name}\n      setList([...list,newItem]);\n      setName('');\n    }\n\n  }\n\n  const showAlert = (show=false,type=\"\",msg=\"\",)=>{\n    setAlert({show,type,msg});\n  }\n  const clearList = ()=>{\n    showAlert(true,'danger','empty list')\n    setList([]);\n  }\n  const removeItem = (id) =>{\n    showAlert(true,'danger','item removed')\n    setList(list.filter((item) => item.id != id))\n  }\n\n  const editItem = (id) =>{\n    const specificItem = list.find((item)=> item.id === id)\n    setIsEditing(true)\n    setEditID(id);\n    setName(specificItem.title)\n  }\n\n  return <section className=\"section-center\">\n    <form action=\"\" className=\"grocery-form\" onSubmit={handleSubmit}>\n      {alert.show && <Alert {...alert} removeAlert={showAlert}\n      list={list}/>}\n      <h3>Grocery bud</h3>\n      <div className=\"form-control\">\n        <input type=\"text\" className=\"grocery\" placeholder=\"e.g. Milk\"\n        value={name} onChange={(e) => setName(e.target.value)}/>\n        <button type=\"submit\" className=\"submit-btn\">\n          {isEditing ? 'edit': 'submit'}\n        </button>\n      </div>\n    </form>\n    { list.length > 0 && (\n      <div className=\"grocery-container\">\n      <List list={list} removeItem={removeItem} editItem={editItem}/>\n      <button className=\"clear-btn\" onClick={clearList}>Clear Items</button>\n      </div>\n    )}\n    \n  </section>\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}