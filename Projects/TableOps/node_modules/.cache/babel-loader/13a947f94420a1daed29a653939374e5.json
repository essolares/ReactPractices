{"ast":null,"code":"var _jsxFileName = \"/Users/edgar/Desktop/ReactPractices/Projects/TableOps/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from './List';\nimport Alert from './Alert';\n\nfunction App() {\n  const [name, setName] = useState([]);\n  const [list, setList] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editID, setEditID] = useState(null);\n  const [alert, setAlert] = useState({\n    show: true,\n    msg: 'Hello',\n    type: 'sucess'\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!name) {//alert\n    } else if (name && isEditing) {//deal with edit\n    } else {\n      //show alert\n      const newItem = {\n        id: new Date().getTime().toString(),\n        title: name\n      };\n      setList([...list, newItem]);\n      setName('');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    className: \"grocery-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, alert.show && /*#__PURE__*/React.createElement(Alert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Grocery bud\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"grocery\",\n    placeholder: \"e.g. Milk\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"submit-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, isEditing ? 'edit' : 'submit'))), list.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grocery-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    list: list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"clear-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Clear Items\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/edgar/Desktop/ReactPractices/Projects/TableOps/src/App.js"],"names":["React","useState","useEffect","List","Alert","App","name","setName","list","setList","isEditing","setIsEditing","editID","setEditID","alert","setAlert","show","msg","type","handleSubmit","e","preventDefault","newItem","id","Date","getTime","toString","title","target","value","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAeN,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAACO,IAAD,EAAMC,OAAN,IAAeR,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAACS,SAAD,EAAWC,YAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACW,MAAD,EAAQC,SAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACa,KAAD,EAAOC,QAAP,IAAkBd,QAAQ,CAAC;AAC/Be,IAAAA,IAAI,EAAC,IAD0B;AAE/BC,IAAAA,GAAG,EAAC,OAF2B;AAG/BC,IAAAA,IAAI,EAAC;AAH0B,GAAD,CAAhC;;AAIA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAACf,IAAL,EAAU,CACR;AACD,KAFD,MAEM,IAAIA,IAAI,IAAII,SAAZ,EAAsB,CAC1B;AACD,KAFK,MAEA;AACJ;AACA,YAAMY,OAAO,GAAG;AAACC,QAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,GAAqBC,QAArB,EAAL;AAAqCC,QAAAA,KAAK,EAACrB;AAA3C,OAAhB;AACAG,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAASc,OAAT,CAAD,CAAP;AACAf,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AAEF,GAbD;;AAeA,sBAAO;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACL;AAAM,IAAA,MAAM,EAAC,EAAb;AAAgB,IAAA,SAAS,EAAC,cAA1B;AAAyC,IAAA,QAAQ,EAAEY,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACE,IAAN,iBAAc,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,eAGE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,SAA7B;AAAuC,IAAA,WAAW,EAAC,WAAnD;AACA,IAAA,KAAK,EAAEV,IADP;AACa,IAAA,QAAQ,EAAGc,CAAD,IAAOb,OAAO,CAACa,CAAC,CAACQ,MAAF,CAASC,KAAV,CADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,SAAS,GAAG,MAAH,GAAW,QADvB,CAHF,CAHF,CADK,EAYHF,IAAI,CAACsB,MAAL,GAAc,CAAd,iBACA;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEtB,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFA,CAbG,CAAP;AAqBD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport List from './List'\nimport Alert from './Alert'\n\nfunction App() {\n  const [name,setName]=useState([]);\n  const [list,setList]=useState([]);\n  const [isEditing,setIsEditing]= useState(false);\n  const [editID,setEditID]= useState(null);\n  const [alert,setAlert]= useState({\n    show:true,\n    msg:'Hello',\n    type:'sucess'});\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!name){\n      //alert\n    }else if (name && isEditing){\n      //deal with edit\n    }else {\n      //show alert\n      const newItem = {id: new Date().getTime().toString(),title:name}\n      setList([...list,newItem]);\n      setName('');\n    }\n\n  }\n\n  return <section className=\"section-center\">\n    <form action=\"\" className=\"grocery-form\" onSubmit={handleSubmit}>\n      {alert.show && <Alert/>}\n      <h3>Grocery bud</h3>\n      <div className=\"form-control\">\n        <input type=\"text\" className=\"grocery\" placeholder=\"e.g. Milk\"\n        value={name} onChange={(e) => setName(e.target.value)}/>\n        <button type=\"submit\" className=\"submit-btn\">\n          {isEditing ? 'edit': 'submit'}\n        </button>\n      </div>\n    </form>\n    { list.length > 0 && (\n      <div className=\"grocery-container\">\n      <List list={list}/>\n      <button className=\"clear-btn\">Clear Items</button>\n      </div>\n    )\n    }\n    \n  </section>\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}