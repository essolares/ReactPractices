{"ast":null,"code":"var _jsxFileName = \"/Users/edgar/Desktop/ReactPractices/Projects/AdvanceMenu/src/context.js\";\nimport React, { useState, useContext } from 'react';\nimport sublinks from './data';\nconst AppContext = React.createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isSubmenuOpen, setIsSubmenuOpen] = useState(false);\n  const [location, setLocation] = useState({});\n  const [page, setPage] = useState({\n    page: '',\n    links: []\n  });\n\n  const openSidebar = () => {\n    setIsSidebarOpen(true);\n  };\n\n  const closeSidebar = () => {\n    setIsSidebarOpen(false);\n  };\n\n  const openSubmenu = () => {\n    setIsSubmenuOpen(true);\n  };\n\n  const closeSubmenu = (text, coordenates) => {\n    const page = sublinks.find(link => {\n      link.page === text;\n    });\n    setPage(page);\n    setLocation(coordenates);\n    setIsSubmenuOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      isSidebarOpen,\n      isSubmenuOpen,\n      openSubmenu,\n      openSidebar,\n      closeSubmenu,\n      closeSidebar,\n      location,\n      page\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};","map":{"version":3,"sources":["/Users/edgar/Desktop/ReactPractices/Projects/AdvanceMenu/src/context.js"],"names":["React","useState","useContext","sublinks","AppContext","createContext","AppProvider","children","isSidebarOpen","setIsSidebarOpen","isSubmenuOpen","setIsSubmenuOpen","location","setLocation","page","setPage","links","openSidebar","closeSidebar","openSubmenu","closeSubmenu","text","coordenates","find","link","useGlobalContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,QAArB;AAEA,MAAMC,UAAU,GAAGJ,KAAK,CAACK,aAAN,EAAnB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACxC,QAAM,CAACC,aAAD,EAAeC,gBAAf,IAAkCR,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACS,aAAD,EAAeC,gBAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACW,QAAD,EAAUC,WAAV,IAAyBZ,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACa,IAAD,EAAMC,OAAN,IAAiBd,QAAQ,CAAC;AAACa,IAAAA,IAAI,EAAC,EAAN;AAASE,IAAAA,KAAK,EAAC;AAAf,GAAD,CAA/B;;AAEA,QAAMC,WAAW,GAAG,MAAI;AACpBR,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAFD;;AAGA,QAAMS,YAAY,GAAG,MAAI;AACrBT,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAFD;;AAGA,QAAMU,WAAW,GAAG,MAAI;AACpBR,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAFD;;AAGA,QAAMS,YAAY,GAAE,CAACC,IAAD,EAAMC,WAAN,KAAoB;AACpC,UAAMR,IAAI,GAAGX,QAAQ,CAACoB,IAAT,CAAeC,IAAD,IAAQ;AAACA,MAAAA,IAAI,CAACV,IAAL,KAAcO,IAAd;AACnC,KADY,CAAb;AAEAN,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,IAAAA,WAAW,CAACS,WAAD,CAAX;AACAX,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAND;;AAQA,sBACI,oBAAC,UAAD,CAAY,QAAZ;AACA,IAAA,KAAK,EAAE;AACHH,MAAAA,aADG;AACWE,MAAAA,aADX;AAEHS,MAAAA,WAFG;AAESF,MAAAA,WAFT;AAEqBG,MAAAA,YAFrB;AAEkCF,MAAAA,YAFlC;AAGHN,MAAAA,QAHG;AAGME,MAAAA;AAHN,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKP,QALL,CADJ;AASH,CAhCM;AAmCP,OAAO,MAAMkB,gBAAgB,GAAG,MAAM;AAClC,SAAOvB,UAAU,CAACE,UAAD,CAAjB;AACH,CAFM","sourcesContent":["import React, { useState, useContext } from 'react'\nimport sublinks from './data'\n\nconst AppContext = React.createContext()\n\nexport const AppProvider = ({ children }) =>{\n    const [isSidebarOpen,setIsSidebarOpen]= useState(false);\n    const [isSubmenuOpen,setIsSubmenuOpen]= useState(false);\n    const [location,setLocation] = useState({});\n    const [page,setPage] = useState({page:'',links:[]});\n\n    const openSidebar = ()=>{\n        setIsSidebarOpen(true);\n    }\n    const closeSidebar = ()=>{\n        setIsSidebarOpen(false);\n    }\n    const openSubmenu = ()=>{\n        setIsSubmenuOpen(true);\n    }\n    const closeSubmenu= (text,coordenates)=>{\n        const page = sublinks.find((link)=>{link.page === text\n        })\n        setPage(page);\n        setLocation(coordenates);\n        setIsSubmenuOpen(false);\n    }\n\n    return (\n        <AppContext.Provider \n        value={{\n            isSidebarOpen,isSubmenuOpen,\n            openSubmenu,openSidebar,closeSubmenu,closeSidebar,\n            location,page}}>\n            {children}\n        </AppContext.Provider>\n    )\n}\n\n\nexport const useGlobalContext = () => {\n    return useContext(AppContext)\n}"]},"metadata":{},"sourceType":"module"}