{"ast":null,"code":"var _jsxFileName = \"/Users/edgar/Desktop/ReactPractices/Projects/AdvanceMenu/src/Submenu.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useGlobalContext } from './context';\n\nconst Submenu = () => {\n  const {\n    isSubmenuOpen,\n    location,\n    page\n  } = useGlobalContext();\n  const container = useRef(null);\n  useEffect(() => {\n    const submenu = container.current;\n    const {\n      center,\n      botton\n    } = location;\n    submenu.style.left = `${center}px`;\n    submenu.style.top = `${botton}px`;\n  }, [location]);\n  return /*#__PURE__*/React.createElement(\"aside\", {\n    className: `${isSubmenuOpen ? 'submenu show' : 'submenu'}`,\n    ref: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }\n  }, \"btn\");\n};\n\nexport default Submenu;","map":{"version":3,"sources":["/Users/edgar/Desktop/ReactPractices/Projects/AdvanceMenu/src/Submenu.js"],"names":["React","useState","useRef","useEffect","useGlobalContext","Submenu","isSubmenuOpen","location","page","container","submenu","current","center","botton","style","left","top"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAAQC,gBAAR,QAA+B,WAA/B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM;AAACC,IAAAA,aAAD;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA;AAAzB,MAAiCJ,gBAAgB,EAAvD;AACA,QAAMK,SAAS,GAAGP,MAAM,CAAC,IAAD,CAAxB;AACAC,EAAAA,SAAS,CAAC,MAAK;AACb,UAAMO,OAAO,GAAGD,SAAS,CAACE,OAA1B;AACA,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAsBN,QAA5B;AACAG,IAAAA,OAAO,CAACI,KAAR,CAAcC,IAAd,GAAsB,GAAEH,MAAO,IAA/B;AACAF,IAAAA,OAAO,CAACI,KAAR,CAAcE,GAAd,GAAqB,GAAEH,MAAO,IAA9B;AACD,GALQ,EAKP,CAACN,QAAD,CALO,CAAT;AAMA,sBAAO;AAAO,IAAA,SAAS,EACnB,GAAED,aAAa,GAAC,cAAD,GAAgB,SAAU,EADtC;AACyC,IAAA,GAAG,EAAEG,SAD9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAID,CAbD;;AAeA,eAAeJ,OAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport {useGlobalContext} from './context'\n\nconst Submenu = () => {\n  const {isSubmenuOpen,location, page} = useGlobalContext()\n  const container = useRef(null);\n  useEffect(()=> {\n    const submenu = container.current;\n    const { center, botton  } = location;\n    submenu.style.left = `${center}px`\n    submenu.style.top = `${botton}px`\n  },[location])\n  return <aside className=\n    {`${isSubmenuOpen?'submenu show':'submenu'}`} ref={container}>\nbtn\n  </aside>\n}\n\nexport default Submenu\n"]},"metadata":{},"sourceType":"module"}