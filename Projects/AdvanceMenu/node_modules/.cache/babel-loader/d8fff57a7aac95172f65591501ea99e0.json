{"ast":null,"code":"var _jsxFileName = \"/Users/edgar/Desktop/ReactPractices/Projects/AdvanceMenu/src/context.js\";\nimport React, { useState, useContext } from 'react';\nimport sublinks from './data';\nconst AppContext = React.createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isSubmenuOpen, setIsSubmenuOpen] = useState(true);\n\n  const openSidebar = () => {\n    setIsSidebarOpen(true);\n  };\n\n  const closeSidebar = () => {\n    setIsSidebarOpen(false);\n  };\n\n  const openSubmenu = () => {\n    setIsSubmenuOpen(true);\n  };\n\n  const closeSubmenu = () => {\n    setIsSubmenuOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      isSubmenuOpen,\n      isSidebarOpen,\n      openSubmenu,\n      openSidebar,\n      closeSubmenu,\n      closeSidebar\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};","map":{"version":3,"sources":["/Users/edgar/Desktop/ReactPractices/Projects/AdvanceMenu/src/context.js"],"names":["React","useState","useContext","sublinks","AppContext","createContext","AppProvider","children","isSidebarOpen","setIsSidebarOpen","isSubmenuOpen","setIsSubmenuOpen","openSidebar","closeSidebar","openSubmenu","closeSubmenu","useGlobalContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,QAArB;AAEA,MAAMC,UAAU,GAAGJ,KAAK,CAACK,aAAN,EAAnB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACxC,QAAM,CAACC,aAAD,EAAeC,gBAAf,IAAkCR,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACS,aAAD,EAAeC,gBAAf,IAAkCV,QAAQ,CAAC,IAAD,CAAhD;;AAEA,QAAMW,WAAW,GAAG,MAAI;AACpBH,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAFD;;AAGA,QAAMI,YAAY,GAAG,MAAI;AACrBJ,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAFD;;AAGA,QAAMK,WAAW,GAAG,MAAI;AACpBH,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAFD;;AAGA,QAAMI,YAAY,GAAE,MAAI;AACpBJ,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAFD;;AAIA,sBACI,oBAAC,UAAD,CAAY,QAAZ;AACA,IAAA,KAAK,EAAE;AAACD,MAAAA,aAAD;AAAeF,MAAAA,aAAf;AAA6BM,MAAAA,WAA7B;AAAyCF,MAAAA,WAAzC;AAAqDG,MAAAA,YAArD;AAAkEF,MAAAA;AAAlE,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKN,QAFL,CADJ;AAMH,CAvBM;AA0BP,OAAO,MAAMS,gBAAgB,GAAG,MAAM;AAClC,SAAOd,UAAU,CAACE,UAAD,CAAjB;AACH,CAFM","sourcesContent":["import React, { useState, useContext } from 'react'\nimport sublinks from './data'\n\nconst AppContext = React.createContext();\n\nexport const AppProvider = ({ children }) =>{\n    const [isSidebarOpen,setIsSidebarOpen]= useState(true);\n    const [isSubmenuOpen,setIsSubmenuOpen]= useState(true);\n\n    const openSidebar = ()=>{\n        setIsSidebarOpen(true);\n    }\n    const closeSidebar = ()=>{\n        setIsSidebarOpen(false);\n    }\n    const openSubmenu = ()=>{\n        setIsSubmenuOpen(true);\n    }\n    const closeSubmenu= ()=>{\n        setIsSubmenuOpen(false);\n    }\n\n    return (\n        <AppContext.Provider \n        value={{isSubmenuOpen,isSidebarOpen,openSubmenu,openSidebar,closeSubmenu,closeSidebar}}>\n            {children}\n        </AppContext.Provider>\n    )\n}\n\n\nexport const useGlobalContext = () => {\n    return useContext(AppContext)\n}"]},"metadata":{},"sourceType":"module"}