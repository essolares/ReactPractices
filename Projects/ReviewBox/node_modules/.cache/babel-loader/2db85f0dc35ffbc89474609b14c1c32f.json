{"ast":null,"code":"var _jsxFileName = \"/Users/edgar/Desktop/ReactPractices/Projects/ReviewBox/src/Review.js\";\nimport React, { useState } from 'react';\nimport people from './data';\nimport { FaChevronLeft, FaChevronRight, FaQuoteRight } from 'react-icons/fa';\n\nconst Review = () => {\n  const [index, setIndex] = useState(0);\n  const {\n    name,\n    job,\n    image,\n    text\n  } = people[index];\n\n  const checkNumber = number => {\n    if (number > people.length - 1) {\n      return 0;\n    }\n\n    if (number < 0) {\n      return people.length - 1;\n    }\n\n    return number;\n  };\n\n  const nextPerson = () => {\n    setIndex(index => {\n      let newIndex = index + 1;\n      return checkNumber(newIndex);\n    });\n  };\n\n  const prevPerson = () => {\n    setIndex(index => {\n      let newIndex = index - 1;\n      return checkNumber(newIndex);\n    });\n  };\n\n  const randomPerson = () => {\n    let randomNumber = Math.floor(Math.random() * people.length);\n\n    if (randomNumber === index) {\n      randomNumber = index + 1;\n    }\n\n    setIndex(checkNumber(randomNumber));\n  };\n\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: \"review\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    alt: name,\n    className: \"person-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"quote-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FaQuoteRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"job\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, job), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"pre-btn\",\n    onClick: prevPerson,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FaChevronLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"nexg-btn\",\n    onClick: nextPerson,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FaChevronRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"random-btn\",\n    onClick: randomPerson,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, \"Random\"));\n};\n\nexport default Review;","map":{"version":3,"sources":["/Users/edgar/Desktop/ReactPractices/Projects/ReviewBox/src/Review.js"],"names":["React","useState","people","FaChevronLeft","FaChevronRight","FaQuoteRight","Review","index","setIndex","name","job","image","text","checkNumber","number","length","nextPerson","newIndex","prevPerson","randomPerson","randomNumber","Math","floor","random"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport people from './data';\nimport { FaChevronLeft, FaChevronRight, FaQuoteRight } from 'react-icons/fa';\n\nconst Review = () => {\n  const [index,setIndex] = useState(0);\n  const {name,job,image,text} = people[index];\n\n  const checkNumber = (number) => {\n    if (number > people.length -1){\n      return 0;\n    }\n    if (number < 0){\n      return people.length-1;\n    }\n    return number;\n  } \n\n  const nextPerson = () =>{\n    setIndex((index) => {\n      let newIndex = index +1;\n      return checkNumber(newIndex);\n    });\n  }\n  const prevPerson = () =>{\n    setIndex((index) => {\n      let newIndex = index -1;\n      return checkNumber(newIndex);\n    });\n  }\n\n  const randomPerson = ()=> {\n    let randomNumber = Math.floor(Math.random() * people.length);\n    if (randomNumber === index){\n      randomNumber = index+1;\n    }\n    setIndex(checkNumber(randomNumber));\n  }\n\n  return <article className=\"review\">\n    <div className=\"img-container\">\n      <img src={image} alt={name} className=\"person-img\"/>\n      <span className=\"quote-icon\">\n        <FaQuoteRight/>\n      </span>\n    </div>\n    <h4 className=\"author\">{name}</h4>\n    <p className=\"job\">{job}</p>\n    <p className=\"info\">{text}</p>\n    <div className=\"button-container\">\n      <button className=\"pre-btn\" onClick={prevPerson}>\n        <FaChevronLeft/>\n      </button>\n      <button className=\"nexg-btn\" onClick={nextPerson}>\n        <FaChevronRight/>\n      </button>\n    </div>\n    <button className=\"random-btn\" onClick={randomPerson}>\n        Random\n      </button>\n  </article>;\n};\n\nexport default Review;\n"]},"metadata":{},"sourceType":"module"}